{"1744055638721":{"actionType":"saveAll","createdAt":"1744055638721","actionID":"1744055638721","userID":"#TEMP","path":"system.capsules.1bea0190-3c36-4cf0-9e0e-d34a3511565f.capsUseCodeInfo.capsUseInputs.sss_freeValue-0.capsIptTxtValue","oldValue":"// Detecta se o iframe foi recarregado com novo timestamp\nwindow.addEventListener('load', () => {\n  const urlParams = new URLSearchParams(window.location.search);\n  const timestamp = urlParams.get('t');\n  const lastTimestamp = window.localStorage.getItem('lastReloadTimestamp');\n\n  if (timestamp && timestamp !== lastTimestamp) {\n    console.log('[iframe] Novo timestamp detectado.');\n    window.localStorage.setItem('lastReloadTimestamp', timestamp);\n  }\n});\n\n// (Opcional) permite que o React envie mensagens via postMessage\nwindow.addEventListener('message', event => {\n  if (typeof event.data === 'string' && event.data === 'reload') {\n    console.log('[iframe] postMessage: reload recebido.');\n    window.location.reload();\n  }\n});\n","newValue":"// Detecta se o iframe foi recarregado com novo timestamp\nwindow.addEventListener('load', () => {\n  const urlParams = new URLSearchParams(window.location.search);\n  const timestamp = urlParams.get('t');\n  const lastTimestamp = window.localStorage.getItem('lastReloadTimestamp');\n\n  if (timestamp && timestamp !== lastTimestamp) {\n    console.log('[iframe] Novo timestamp detectado.');\n    window.localStorage.setItem('lastReloadTimestamp', timestamp);\n  }\n});\n\n// (Opcional) permite que o React envie mensagens via postMessage\nwindow.addEventListener('message', event => {\n  if (typeof event.data === 'string' && event.data === 'reload') {\n    console.log('[iframe] postMessage: reload recebido.');\n    window.location.reload();\n  }\n});"}}